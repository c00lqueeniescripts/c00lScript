local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")

local flying = false
local speed = 25 -- velocidade do voo
local dragging, dragInput, dragStart, startPos

-- Função para criar o botão
local function createButton()
	-- Remove botões antigos (caso ainda exista algum)
	if player:FindFirstChild("PlayerGui") then
		local oldGui = player.PlayerGui:FindFirstChild("FlyRollbackGui")
		if oldGui then
			oldGui:Destroy()
		end
	end

	local screenGui = Instance.new("ScreenGui")
	screenGui.Name = "FlyRollbackGui"
	screenGui.ResetOnSpawn = false
	screenGui.Parent = player:WaitForChild("PlayerGui")

	local button = Instance.new("TextButton")
	button.Size = UDim2.new(0, 160, 0, 50)
	button.Position = UDim2.new(0.05, 0, 0.85, 0)
	button.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- fundo preto
	button.BorderSizePixel = 3
	button.BorderColor3 = Color3.fromRGB(200, 0, 0) -- borda vermelha
	button.TextColor3 = Color3.new(1, 1, 1)
	button.Font = Enum.Font.SourceSansBold
	button.TextSize = 22
	button.Text = "Rollback OFF"
	button.Parent = screenGui

	-- Toggle do voo
	local function toggleFly()
		flying = not flying
		if flying then
			button.Text = "Rollback ON"
			button.BorderColor3 = Color3.fromRGB(0, 200, 0)
		else
			button.Text = "Rollback OFF"
			button.BorderColor3 = Color3.fromRGB(200, 0, 0)
			if hrp then
				hrp.Velocity = Vector3.new(0, 0, 0)
			end
		end
	end

	button.MouseButton1Click:Connect(toggleFly)

	-- Sistema arrastável
	local function update(input)
		local delta = input.Position - dragStart
		button.Position = UDim2.new(
			startPos.X.Scale,
			startPos.X.Offset + delta.X,
			startPos.Y.Scale,
			startPos.Y.Offset + delta.Y
		)
	end

	button.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = button.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	button.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
end

-- Loop do voo
RunService.RenderStepped:Connect(function()
	if flying and hrp then
		local cam = workspace.CurrentCamera
		local lookVector = cam.CFrame.LookVector
		hrp.Velocity = lookVector * speed
	end
end)

-- Quando o player respawna, recria o botão
player.CharacterAdded:Connect(function(newChar)
	char = newChar
	hrp = char:WaitForChild("HumanoidRootPart")

	-- espera um pouco para garantir que a HUD esteja carregada
	task.wait(1)
	createButton()
end)

-- Quando o player morrer, botão some
local function onDied()
	local gui = player.PlayerGui:FindFirstChild("FlyRollbackGui")
	if gui then
		gui:Destroy()
	end
end

char:WaitForChild("Humanoid").Died:Connect(onDied)

-- Cria botão no primeiro spawn
createButton()
